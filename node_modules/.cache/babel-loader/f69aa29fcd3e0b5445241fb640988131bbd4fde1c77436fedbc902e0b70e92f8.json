{"ast":null,"code":"var _jsxFileName = \"D:\\\\qu\\\\quran-website\\\\src\\\\components\\\\sections\\\\ChaptersSection.tsx\",\n  _s = $RefreshSig$();\n// src/components/sections/ChaptersSection.tsx\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { staggerContainer, staggerItem, fadeInUp } from '../../hooks/useAnimations';\nimport './ChaptersSection.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChaptersSection = () => {\n  _s();\n  const [chapters, setChapters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch chapters from Quran API\n    const fetchChapters = async () => {\n      try {\n        console.log('Fetching chapters from API...');\n        // Using the public API endpoint for chapters\n        const response = await fetch('https://api.quran.com/api/v4/chapters?language=en');\n        console.log('Response status:', response.status);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('API Response:', data);\n\n        // Check if the response has the expected structure\n        if (data && data.chapters) {\n          console.log(`Loaded ${data.chapters.length} chapters`);\n          setChapters(data.chapters);\n        } else {\n          console.error('Unexpected API response structure:', data);\n          // Fallback data\n          const fallbackChapters = Array.from({\n            length: 114\n          }, (_, i) => ({\n            id: i + 1,\n            name_simple: `Surah ${i + 1}`,\n            translated_name: {\n              language_name: 'English',\n              name: `Chapter ${i + 1}`\n            },\n            verses_count: Math.floor(Math.random() * 286) + 1,\n            // Random between 1-286\n            revelation_type: i < 86 ? 'Meccan' : 'Medinan'\n          }));\n          setChapters(fallbackChapters);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching chapters:', error);\n        setLoading(false);\n\n        // Fallback data in case API fails\n        const fallbackChapters = Array.from({\n          length: 114\n        }, (_, i) => ({\n          id: i + 1,\n          name_simple: `Surah ${i + 1}`,\n          translated_name: {\n            language_name: 'English',\n            name: `Chapter ${i + 1}`\n          },\n          verses_count: Math.floor(Math.random() * 286) + 1,\n          // Random between 1-286\n          revelation_type: i < 86 ? 'Meccan' : 'Medinan'\n        }));\n        setChapters(fallbackChapters);\n      }\n    };\n    fetchChapters();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chapters-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(motion.h2, {\n        className: \"section-title red-accent\",\n        variants: fadeInUp,\n        initial: \"hidden\",\n        whileInView: \"visible\",\n        viewport: {\n          once: true,\n          amount: 0.3\n        },\n        children: \"All Quran Chapters (Surahs)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading chapters...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Total chapters loaded: \", chapters.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"chapters-grid\",\n          variants: staggerContainer,\n          initial: \"hidden\",\n          whileInView: \"visible\",\n          viewport: {\n            once: true,\n            amount: 0.2\n          },\n          children: chapters.map((chapter, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"chapter-card\",\n            variants: staggerItem,\n            whileHover: {\n              y: -5,\n              transition: {\n                duration: 0.3\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chapter-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chapter-number\",\n                children: chapter.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chapter-revelation-type\",\n                children: chapter.revelation_type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chapter-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"chapter-name\",\n                children: chapter.name_simple\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"chapter-translation\",\n                children: [\"\\\"\", chapter.translated_name.name, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"chapter-verses\",\n                children: [chapter.verses_count, \" verses\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, chapter.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(ChaptersSection, \"TquXITi0O+GeLaTAYA6C/EmcJz4=\");\n_c = ChaptersSection;\nexport default ChaptersSection;\nvar _c;\n$RefreshReg$(_c, \"ChaptersSection\");","map":{"version":3,"names":["React","useState","useEffect","motion","staggerContainer","staggerItem","fadeInUp","jsxDEV","_jsxDEV","Fragment","_Fragment","ChaptersSection","_s","chapters","setChapters","loading","setLoading","fetchChapters","console","log","response","fetch","status","ok","Error","data","json","length","error","fallbackChapters","Array","from","_","i","id","name_simple","translated_name","language_name","name","verses_count","Math","floor","random","revelation_type","className","children","h2","variants","initial","whileInView","viewport","once","amount","fileName","_jsxFileName","lineNumber","columnNumber","div","map","chapter","index","whileHover","y","transition","duration","_c","$RefreshReg$"],"sources":["D:/qu/quran-website/src/components/sections/ChaptersSection.tsx"],"sourcesContent":["// src/components/sections/ChaptersSection.tsx\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { staggerContainer, staggerItem, fadeInUp } from '../../hooks/useAnimations';\nimport './ChaptersSection.css';\n\ninterface Chapter {\n  id: number;\n  name_simple: string;\n  translated_name: {\n    language_name: string;\n    name: string;\n  };\n  verses_count: number;\n  revelation_type: string;\n}\n\ninterface ChaptersSectionProps {\n  children?: React.ReactNode;\n}\n\nconst ChaptersSection: React.FC<ChaptersSectionProps> = () => {\n  const [chapters, setChapters] = useState<Chapter[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch chapters from Quran API\n    const fetchChapters = async () => {\n      try {\n        console.log('Fetching chapters from API...');\n        // Using the public API endpoint for chapters\n        const response = await fetch('https://api.quran.com/api/v4/chapters?language=en');\n        console.log('Response status:', response.status);\n        \n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        \n        const data = await response.json();\n        console.log('API Response:', data);\n        \n        // Check if the response has the expected structure\n        if (data && data.chapters) {\n          console.log(`Loaded ${data.chapters.length} chapters`);\n          setChapters(data.chapters);\n        } else {\n          console.error('Unexpected API response structure:', data);\n          // Fallback data\n          const fallbackChapters: Chapter[] = Array.from({ length: 114 }, (_, i) => ({\n            id: i + 1,\n            name_simple: `Surah ${i + 1}`,\n            translated_name: {\n              language_name: 'English',\n              name: `Chapter ${i + 1}`\n            },\n            verses_count: Math.floor(Math.random() * 286) + 1, // Random between 1-286\n            revelation_type: i < 86 ? 'Meccan' : 'Medinan'\n          }));\n          setChapters(fallbackChapters);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching chapters:', error);\n        setLoading(false);\n        \n        // Fallback data in case API fails\n        const fallbackChapters: Chapter[] = Array.from({ length: 114 }, (_, i) => ({\n          id: i + 1,\n          name_simple: `Surah ${i + 1}`,\n          translated_name: {\n            language_name: 'English',\n            name: `Chapter ${i + 1}`\n          },\n          verses_count: Math.floor(Math.random() * 286) + 1, // Random between 1-286\n          revelation_type: i < 86 ? 'Meccan' : 'Medinan'\n        }));\n        setChapters(fallbackChapters);\n      }\n    };\n\n    fetchChapters();\n  }, []);\n\n  return (\n    <section className=\"chapters-section\">\n      <div className=\"container\">\n        <motion.h2 \n          className=\"section-title red-accent\"\n          variants={fadeInUp}\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, amount: 0.3 }}\n        >\n          All Quran Chapters (Surahs)\n        </motion.h2>\n        \n        {loading ? (\n          <div className=\"loading\">Loading chapters...</div>\n        ) : (\n          <>\n            <div>Total chapters loaded: {chapters.length}</div>\n            <motion.div \n              className=\"chapters-grid\"\n              variants={staggerContainer}\n              initial=\"hidden\"\n              whileInView=\"visible\"\n              viewport={{ once: true, amount: 0.2 }}\n            >\n              {chapters.map((chapter, index) => (\n                <motion.div \n                  key={chapter.id}\n                  className=\"chapter-card\"\n                  variants={staggerItem}\n                  whileHover={{ \n                    y: -5,\n                    transition: { duration: 0.3 }\n                  }}\n                >\n                  <div className=\"chapter-header\">\n                    <span className=\"chapter-number\">{chapter.id}</span>\n                    <span className=\"chapter-revelation-type\">{chapter.revelation_type}</span>\n                  </div>\n                  <div className=\"chapter-content\">\n                    <h3 className=\"chapter-name\">{chapter.name_simple}</h3>\n                    <p className=\"chapter-translation\">\"{chapter.translated_name.name}\"</p>\n                    <p className=\"chapter-verses\">{chapter.verses_count} verses</p>\n                  </div>\n                </motion.div>\n              ))}\n            </motion.div>\n          </>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default ChaptersSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}