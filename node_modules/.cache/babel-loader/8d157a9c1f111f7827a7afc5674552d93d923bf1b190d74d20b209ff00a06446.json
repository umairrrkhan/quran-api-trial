{"ast":null,"code":"import _objectWithoutProperties from \"D:/qu/quran-website/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"onComplete\"];\nimport { GroupAnimationWithThen } from 'motion-dom';\nimport { removeItem } from 'motion-utils';\nimport { animateSequence } from './sequence.mjs';\nimport { animateSubject } from './subject.mjs';\nfunction isSequence(value) {\n  return Array.isArray(value) && value.some(Array.isArray);\n}\n/**\n * Creates an animation function that is optionally scoped\n * to a specific element.\n */\nfunction createScopedAnimate(scope) {\n  /**\n   * Implementation\n   */\n  function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\n    let animations = [];\n    let animationOnComplete;\n    if (isSequence(subjectOrSequence)) {\n      animations = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);\n    } else {\n      // Extract top-level onComplete so it doesn't get applied per-value\n      const _ref = options || {},\n        {\n          onComplete\n        } = _ref,\n        rest = _objectWithoutProperties(_ref, _excluded);\n      if (typeof onComplete === \"function\") {\n        animationOnComplete = onComplete;\n      }\n      animations = animateSubject(subjectOrSequence, optionsOrKeyframes, rest, scope);\n    }\n    const animation = new GroupAnimationWithThen(animations);\n    if (animationOnComplete) {\n      animation.finished.then(animationOnComplete);\n    }\n    if (scope) {\n      scope.animations.push(animation);\n      animation.finished.then(() => {\n        removeItem(scope.animations, animation);\n      });\n    }\n    return animation;\n  }\n  return scopedAnimate;\n}\nconst animate = createScopedAnimate();\nexport { animate, createScopedAnimate };","map":{"version":3,"names":["GroupAnimationWithThen","removeItem","animateSequence","animateSubject","isSequence","value","Array","isArray","some","createScopedAnimate","scope","scopedAnimate","subjectOrSequence","optionsOrKeyframes","options","animations","animationOnComplete","_ref","onComplete","rest","_objectWithoutProperties","_excluded","animation","finished","then","push","animate"],"sources":["D:/qu/quran-website/node_modules/framer-motion/dist/es/animation/animate/index.mjs"],"sourcesContent":["import { GroupAnimationWithThen } from 'motion-dom';\nimport { removeItem } from 'motion-utils';\nimport { animateSequence } from './sequence.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction isSequence(value) {\n    return Array.isArray(value) && value.some(Array.isArray);\n}\n/**\n * Creates an animation function that is optionally scoped\n * to a specific element.\n */\nfunction createScopedAnimate(scope) {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\n        let animations = [];\n        let animationOnComplete;\n        if (isSequence(subjectOrSequence)) {\n            animations = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);\n        }\n        else {\n            // Extract top-level onComplete so it doesn't get applied per-value\n            const { onComplete, ...rest } = options || {};\n            if (typeof onComplete === \"function\") {\n                animationOnComplete = onComplete;\n            }\n            animations = animateSubject(subjectOrSequence, optionsOrKeyframes, rest, scope);\n        }\n        const animation = new GroupAnimationWithThen(animations);\n        if (animationOnComplete) {\n            animation.finished.then(animationOnComplete);\n        }\n        if (scope) {\n            scope.animations.push(animation);\n            animation.finished.then(() => {\n                removeItem(scope.animations, animation);\n            });\n        }\n        return animation;\n    }\n    return scopedAnimate;\n}\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n"],"mappings":";;AAAA,SAASA,sBAAsB,QAAQ,YAAY;AACnD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAASC,cAAc,QAAQ,eAAe;AAE9C,SAASC,UAAUA,CAACC,KAAK,EAAE;EACvB,OAAOC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,IAAI,CAACF,KAAK,CAACC,OAAO,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA,SAASE,mBAAmBA,CAACC,KAAK,EAAE;EAChC;AACJ;AACA;EACI,SAASC,aAAaA,CAACC,iBAAiB,EAAEC,kBAAkB,EAAEC,OAAO,EAAE;IACnE,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAIC,mBAAmB;IACvB,IAAIZ,UAAU,CAACQ,iBAAiB,CAAC,EAAE;MAC/BG,UAAU,GAAGb,eAAe,CAACU,iBAAiB,EAAEC,kBAAkB,EAAEH,KAAK,CAAC;IAC9E,CAAC,MACI;MACD;MACA,MAAAO,IAAA,GAAgCH,OAAO,IAAI,CAAC,CAAC;QAAvC;UAAEI;QAAoB,CAAC,GAAAD,IAAA;QAANE,IAAI,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;MAC3B,IAAI,OAAOH,UAAU,KAAK,UAAU,EAAE;QAClCF,mBAAmB,GAAGE,UAAU;MACpC;MACAH,UAAU,GAAGZ,cAAc,CAACS,iBAAiB,EAAEC,kBAAkB,EAAEM,IAAI,EAAET,KAAK,CAAC;IACnF;IACA,MAAMY,SAAS,GAAG,IAAItB,sBAAsB,CAACe,UAAU,CAAC;IACxD,IAAIC,mBAAmB,EAAE;MACrBM,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACR,mBAAmB,CAAC;IAChD;IACA,IAAIN,KAAK,EAAE;MACPA,KAAK,CAACK,UAAU,CAACU,IAAI,CAACH,SAAS,CAAC;MAChCA,SAAS,CAACC,QAAQ,CAACC,IAAI,CAAC,MAAM;QAC1BvB,UAAU,CAACS,KAAK,CAACK,UAAU,EAAEO,SAAS,CAAC;MAC3C,CAAC,CAAC;IACN;IACA,OAAOA,SAAS;EACpB;EACA,OAAOX,aAAa;AACxB;AACA,MAAMe,OAAO,GAAGjB,mBAAmB,CAAC,CAAC;AAErC,SAASiB,OAAO,EAAEjB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}